on: [pull_request]

name: Basic

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-version: [1.81.0]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust-version }}
          targets: wasm32-unknown-unknown
      - name: Add wasm32 target
        run: rustup target add wasm32-unknown-unknown
      - name: Build
        run: make build

  test:
    needs: build
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-version: [1.81.0]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.rust-version }}
          targets: wasm32-unknown-unknown
      - name: Add wasm32 target
        run: rustup target add wasm32-unknown-unknown
      - name: Run tests
        run: make test

  lints:
    needs: build
    name: Lints
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust-version: ['1.81.0']
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Install Rust toolchain with components
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust-version }}
          override: true
          components: rustfmt, clippy
          target: wasm32-unknown-unknown

      - name: Run lints
        run: make lints
